{"version":3,"sources":["context/UserContext.js","components/Middleware.js","config.js","styles/signupStyles.js","components/Signup.js","styles/homeStyles.js","img/stockJournal.png","components/Home.js","styles/signinStyles.js","components/Signin.js","styles/profileStyles.js","components/Profile.js","styles/navCompStyles.js","components/NavComp.js","styles/journalStyles.js","components/Journal.js","api/entriesApi.js","styles/entriesStyles.js","utils/utils.js","components/Entries.js","components/Calendar.js","components/PaginationComponent.js","styles/allEntriesStyles.js","components/AllEntries.js","components/Editor.js","styles/newEntryStyles.js","components/NewEntry.js","styles/displayEntryStyles.js","components/DisplayEntry.js","components/FourOFour.js","styles/appStyles.js","App.js","reportWebVitals.js","api/authApi.js","context/UserProvider.js","state/useUserProvider.js","index.js"],"names":["userContext","React","createContext","useUserContext","useContext","Middleware","props","location","useLocation","useLayoutEffect","a","setLoading","console","log","user","userCheckAndRefreshAuth","checkTokenValidity","pathname","serverUrl","googleClientId","process","useStyles","makeStyles","root","form","marginTop","errorMessage","color","spinnerContainer","display","paddingTop","justifyContent","spinner","width","height","dividerContainer","dividerText","border","borderRadius","background","padding","marginLeft","transform","buttonContainer","googleButton","boxShadow","Signup","classes","useState","status","errorMessageList","setErrorMessage","loading","useEffect","JSON","stringify","username","password","repeatPassword","formFields","setFormFields","handleChange","e","prev","target","name","value","handleSubmit","preventDefault","errorList","validatePassword","length","messageList","forEach","error","message","push","userSignUp","result","schema","passwordValidator","is","min","max","has","digits","not","spaces","validate","list","responseGoogle","response","accessTokenObj","access_token","tokenObj","userGoogleSignIn","err","Container","className","Spinner","animation","role","Form","onSubmit","Group","controlId","Label","Control","onChange","type","placeholder","map","Button","variant","clientId","buttonText","onSuccess","onFailure","cookiePolicy","title","marginBottom","description","fontSize","paddingLeft","imageContainer","image","signoutButton","borderStyle","backgroundColor","Home","rootRoute","Row","Col","xs","to","ListGroup","Item","onClick","userSignOut","src","journalImg","alt","button","Signin","remember","userSignIn","Check","label","Alert","textAlign","row","verticalAlign","fontWeight","Profile","userGetDetails","userUpdateDetails","email","hobbies","details","setDetails","event","res","data","mounted","userGetDetailsWrapper","as","rows","item","marginRight","textDecoration","NavComp","Navbar","bg","expand","Brand","Toggle","aria-controls","Collapse","id","Nav","Journal","saveEntry","date","entryData","fetch","method","withCredentials","credentials","headers","body","updateEntry","getNumberOfEntries","json","entries","getEntries","amount","order","encodedDate","encodeURIComponent","getEntry","entryId","deleteEntry","headerContainer","alignItems","linkContainer","card","cardText","whiteSpace","overflow","textOverflow","noEntriesMessageContainer","paddingBottom","strip","html","DOMParser","parseFromString","textContent","divideEntriesByDate","dates","entry","dateSet","Set","entriesByDate","obj","Date","Entries","displayDate","history","useHistory","search","slice","decodeURI","dateFormat","setEntries","loadEntries","new","Card","Body","Title","Text","_id","calendar","Calendar","onDateChange","path","useRouteMatch","onClickDay","toString","PaginationComponent","pages","active","setActive","Pagination","size","items","number","makeItems","dateContainer","newEntryButton","paginationContainer","borderColor","AllEntries","setEntriesByDate","numberOfEntries","setNumberOfEntries","activePage","setActivePage","entriesPerPage","getNumberOfEntriesWrapper","getEntriesWrapper","Math","ceil","idx","Editor","editMode","setData","editor","ClassicEditor","onReady","getData","disabled","config","toolbar","inputLabel","inputTitle","NewEntry","setTitle","successMessage","setSuccessMessage","saveEntryWrapper","setTimeout","goBack","createdAt","timezoneOffset","getTimezoneOffset","style","htmlFor","buttonSave","titleInput","titleLabel","DisplayEntry","setEntry","setEditMode","deletMessage","setDeleteMessage","displaySuccessMessage","getEntryWrapper","updateData","updateEntryWrapper","handleDelete","FourOFour","loadingContainer","App","loadingText","exact","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","checkAuth","formedUrl","refreshAuth","checkAndRefreshAuth","text","signout","signin","signup","googleSignin","updateDetails","getDetails","UserProvider","userMethods","setUser","useUserProvider","Provider","children","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.41c4d469.chunk.js","sourcesContent":["import React, { useContext } from \"react\";\r\nconst userContext = React.createContext();\r\nfunction useUserContext() {\r\n  return useContext(userContext);\r\n}\r\nexport { useUserContext, userContext };\r\n","import { useLocation } from \"react-router-dom\";\r\nimport { useLayoutEffect } from \"react\";\r\nimport { useUserContext } from \"../context/UserContext\";\r\n\r\nexport default function Middleware({ props }) {\r\n  const location = useLocation();\r\n\r\n  const userContext = useUserContext();\r\n\r\n  useLayoutEffect(() => {\r\n    async function checkTokenValidity() {\r\n      userContext.setLoading(true);\r\n      console.log(\"loading state true\");\r\n      console.log(\"calling check and refresh\");\r\n      console.log(\"user currently set to: \" + userContext.user);\r\n\r\n      await userContext.userCheckAndRefreshAuth();\r\n      console.log(\"returned from  check and refresh, disabling loading\");\r\n\r\n      userContext.setLoading(false);\r\n    }\r\n\r\n    checkTokenValidity();\r\n  }, [location.pathname]);\r\n\r\n  return (\r\n    <div>\r\n      {console.log(\"rendering middleware\")}\r\n      {console.log(\"location in render\" + location.pathname)}\r\n    </div>\r\n  );\r\n}\r\n","let serverUrl, googleClientId;\r\nif (process.env.NODE_ENV === \"production\") {\r\n  serverUrl = process.env.REACT_APP_PROD_SERVER_URL;\r\n  googleClientId = process.env.REACT_APP_PROD_GOOGLE_CLIENT_ID;\r\n} else {\r\n  serverUrl = process.env.REACT_APP_DEV_SERVER_URL;\r\n  googleClientId = process.env.REACT_APP_DEV_GOOGLE_CLIENT_ID;\r\n}\r\n\r\n// const serverUrl = process.env.REACT_APP_LOCAL_SERVER_URL;\r\nexport { serverUrl, googleClientId };\r\n","import { makeStyles } from \"@material-ui/styles\";\r\nconst useStyles = makeStyles({\r\n  root: {},\r\n  form: { marginTop: \"2rem\" },\r\n  errorMessage: {\r\n    color: \"red\",\r\n  },\r\n  spinnerContainer: {\r\n    display: \"flex\",\r\n    paddingTop: \"20vh\",\r\n    justifyContent: \"center\",\r\n  },\r\n  spinner: {\r\n    width: \"5rem\",\r\n    height: \"5rem\",\r\n  },\r\n  dividerContainer: {\r\n    marginTop: \"4rem\",\r\n  },\r\n  dividerText: {\r\n    marginTop: \"-45px\",\r\n    border: \"2px solid black\",\r\n    display: \"inline-block\",\r\n    borderRadius: \"50%\",\r\n    background: \"white\",\r\n    padding: \"1rem\",\r\n    marginLeft: \"50%\",\r\n    transform: \"translate(-50%,-20%)\",\r\n  },\r\n  buttonContainer: {\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    marginTop: \"4rem\",\r\n  },\r\n  googleButton: {\r\n    width: \"80%\",\r\n    background: \"red !important\",\r\n    color: \"white\",\r\n    padding: \"1rem\",\r\n    border: \"0px\",\r\n    boxShadow: \"2px 3px 5px black\",\r\n  },\r\n});\r\nexport default useStyles;\r\n","import { useState, useEffect } from \"react\";\r\nimport { useUserContext } from \"../context/UserContext\";\r\nimport { Form, Button, Container, Spinner } from \"react-bootstrap\";\r\nimport passwordValidator from \"password-validator\";\r\nimport { GoogleLogin } from \"react-google-login\";\r\nimport { googleClientId } from \"../config\";\r\nimport useStyles from \"../styles/signupStyles\";\r\n\r\nexport default function Signup(props) {\r\n  const userContext = useUserContext();\r\n  const classes = useStyles();\r\n  const [errorMessage, setErrorMessage] = useState({\r\n    status: false,\r\n    errorMessageList: [],\r\n  });\r\n  const [loading, setLoading] = useState(false);\r\n  useEffect(() => {\r\n    console.log(\"logging user context:\" + JSON.stringify(userContext));\r\n  }, [userContext]);\r\n\r\n  const [formFields, setFormFields] = useState({\r\n    username: \"\",\r\n    password: \"\",\r\n    repeatPassword: \"\",\r\n  });\r\n\r\n  const handleChange = (e) => {\r\n    console.log(\"change\");\r\n    setFormFields((prev) => ({ ...prev, [e.target.name]: e.target.value }));\r\n  };\r\n  const handleSubmit = async (e) => {\r\n    console.log(\"submit\");\r\n    e.preventDefault();\r\n    console.log(userContext);\r\n    const { username, password } = formFields;\r\n    const errorList = validatePassword(password);\r\n    console.log(errorList);\r\n\r\n    if (errorList.length > 0) {\r\n      let messageList = [];\r\n\r\n      errorList.forEach((error) => {\r\n        let message;\r\n        if (error === \"min\") message = \"password must be at least 8 characters\";\r\n        if (error === \"max\") message = \"password cannot exceed 100 characters\";\r\n        if (error === \"digits\")\r\n          message = \"password must contain at least one digit\";\r\n        if (error === \"spaces\") message = \"password cannot contain spaces\";\r\n        console.log(message);\r\n        messageList.push(message);\r\n      });\r\n      setErrorMessage({ status: true, errorMessageList: messageList });\r\n    } else {\r\n      setLoading(true);\r\n      const result = await userContext.userSignUp(username, password);\r\n      setLoading(false);\r\n\r\n      if (result !== username) {\r\n        setErrorMessage({ status: true, errorMessageList: [result] });\r\n      }\r\n    }\r\n  };\r\n\r\n  var schema = new passwordValidator();\r\n\r\n  function validatePassword(password) {\r\n    schema\r\n      .is()\r\n      .min(8) // Minimum length 8\r\n      .is()\r\n      .max(100) // Maximum length 100\r\n      .has()\r\n      .digits(1) // Must have at least 2 digits\r\n      .has()\r\n      .not()\r\n      .spaces();\r\n\r\n    return schema.validate(password, { list: true });\r\n  }\r\n  async function responseGoogle(response) {\r\n    try {\r\n      console.log(response);\r\n      // console.log(response.tokenObj[\"access_token\"]);\r\n      const accessTokenObj = { access_token: response.tokenObj.access_token };\r\n      userContext.userGoogleSignIn(accessTokenObj);\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Container>\r\n      {loading ? (\r\n        <div className={classes.spinnerContainer}>\r\n          {\" \"}\r\n          <Spinner animation=\"border\" className={classes.spinner} role=\"status\">\r\n            <span className=\"sr-only\">Loading...</span>\r\n          </Spinner>\r\n        </div>\r\n      ) : (\r\n        <div>\r\n          <Form className={classes.form} onSubmit={handleSubmit}>\r\n            <Form.Group controlId=\"formBasicEmail\">\r\n              <Form.Label>username</Form.Label>\r\n              <Form.Control\r\n                value={formFields.username}\r\n                onChange={handleChange}\r\n                name=\"username\"\r\n                type=\"text\"\r\n                placeholder=\"Enter email\"\r\n              />\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId=\"formBasicPassword\">\r\n              <Form.Label>password</Form.Label>\r\n              <Form.Control\r\n                value={formFields.password}\r\n                onChange={handleChange}\r\n                name=\"password\"\r\n                type=\"password\"\r\n                placeholder=\"password\"\r\n              />\r\n            </Form.Group>\r\n            <Form.Group controlId=\"formBasicPassword\">\r\n              <Form.Label>repeat password</Form.Label>\r\n              <Form.Control\r\n                value={formFields.password}\r\n                onChange={handleChange}\r\n                name=\"password\"\r\n                type=\"password\"\r\n                placeholder=\"password\"\r\n              />\r\n            </Form.Group>\r\n            {errorMessage.status && (\r\n              <div>\r\n                {errorMessage.errorMessageList.map((err) => (\r\n                  <p key={err} className={classes.errorMessage}>\r\n                    {err}\r\n                  </p>\r\n                ))}\r\n              </div>\r\n            )}\r\n\r\n            <Button variant=\"primary\" type=\"submit\">\r\n              Submit\r\n            </Button>\r\n          </Form>\r\n          <div className={classes.dividerContainer}>\r\n            <hr></hr>\r\n\r\n            <h1 className={classes.dividerText}>Or</h1>\r\n          </div>\r\n\r\n          <div className={classes.buttonContainer}>\r\n            <GoogleLogin\r\n              clientId={googleClientId}\r\n              className={classes.googleButton}\r\n              buttonText=\"Login\"\r\n              onSuccess={responseGoogle}\r\n              onFailure={responseGoogle}\r\n              cookiePolicy={\"single_host_origin\"}\r\n            />\r\n          </div>\r\n        </div>\r\n      )}\r\n    </Container>\r\n  );\r\n}\r\n","import { makeStyles } from \"@material-ui/styles\";\r\nconst useStyles = makeStyles({\r\n  title: {\r\n    marginTop: \"2rem\",\r\n    marginBottom: \"4rem\",\r\n  },\r\n  description: {\r\n    fontSize: \"1.5rem\",\r\n    marginBottom: \"2rem\",\r\n    paddingLeft: \"1rem\",\r\n  },\r\n  imageContainer: {\r\n    width: \"50%\",\r\n  },\r\n  image: {\r\n    marginLeft: \"50%\",\r\n    marginTop: \"-10%\",\r\n    width: \"100%\",\r\n  },\r\n  signoutButton: {\r\n    borderStyle: \"none\",\r\n    display: \"inline\",\r\n    backgroundColor: \"inherit\",\r\n    padding: \"0\",\r\n    color: \"dodgerblue\",\r\n  },\r\n});\r\n\r\nexport default useStyles;\r\n","export default __webpack_public_path__ + \"static/media/stockJournal.16770ff0.png\";","import { useUserContext } from \"../context/UserContext\";\r\nimport { Container, ListGroup, Col, Row } from \"react-bootstrap\";\r\nimport useStyles from \"../styles/homeStyles\";\r\nimport { Link } from \"react-router-dom\";\r\nimport journalImg from \"../img/stockJournal.png\";\r\n\r\nexport default function Home(props) {\r\n  const userContext = useUserContext();\r\n  const classes = useStyles();\r\n  const { rootRoute } = props;\r\n\r\n  return (\r\n    <Container className={classes.root}>\r\n      {userContext.user ? (\r\n        <>\r\n          <Row>\r\n            <Col xs={6}>\r\n              <h1 className={classes.title}>\r\n                Welcome Back, <Link to=\"/profile\">{userContext.user}</Link>\r\n              </h1>\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col xs={6}>\r\n              <ListGroup>\r\n                <ListGroup.Item>\r\n                  <Link to=\"/Journal\">Journal</Link>\r\n                </ListGroup.Item>\r\n\r\n                <ListGroup.Item>\r\n                  <Link to=\"/Profile\">Profile Page</Link>\r\n                </ListGroup.Item>\r\n                <ListGroup.Item>\r\n                  <button\r\n                    className={`${classes.signoutButton} list-group-item`}\r\n                    onClick={() => userContext.userSignOut()}\r\n                  >\r\n                    Signout\r\n                  </button>\r\n                </ListGroup.Item>\r\n              </ListGroup>\r\n            </Col>\r\n            <Col xs={6}>\r\n              <div className={classes.imageContainer}>\r\n                <img className={classes.image} src={journalImg} alt=\"\" />\r\n              </div>\r\n            </Col>\r\n          </Row>\r\n        </>\r\n      ) : (\r\n        <>\r\n          <Row>\r\n            <Col xs={6}>\r\n              <h1 className={classes.title}>Welcome To My Online Journal</h1>\r\n              <p className={classes.description}>\r\n                This is an online journal you can access from anywhere. Signup\r\n                or Sign in with a social media account and start adding entries\r\n                to your journal.\r\n              </p>\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col xs={6}>\r\n              <ListGroup>\r\n                <ListGroup.Item>\r\n                  <Link to={`${rootRoute}/Signup`}>create an account</Link>\r\n                </ListGroup.Item>\r\n\r\n                <ListGroup.Item>\r\n                  <Link to={`${rootRoute}/Signin`}>\r\n                    Sign in with an existing account\r\n                  </Link>\r\n                </ListGroup.Item>\r\n              </ListGroup>\r\n            </Col>\r\n            <Col xs={6}>\r\n              <div className={classes.imageContainer}>\r\n                <img className={classes.image} src={journalImg} alt=\"\" />\r\n              </div>\r\n            </Col>\r\n          </Row>\r\n        </>\r\n      )}\r\n    </Container>\r\n  );\r\n}\r\n","import { makeStyles } from \"@material-ui/styles\";\r\nconst useStyles = makeStyles({\r\n  form: { marginTop: \"2rem\" },\r\n  button: {\r\n    marginBottom: \"2rem\",\r\n  },\r\n  dividerContainer: {\r\n    marginTop: \"4rem\",\r\n  },\r\n  dividerText: {\r\n    marginTop: \"-45px\",\r\n    border: \"2px solid black\",\r\n    display: \"inline-block\",\r\n    borderRadius: \"50%\",\r\n    background: \"white\",\r\n    padding: \"1rem\",\r\n    marginLeft: \"50%\",\r\n    transform: \"translate(-50%,-20%)\",\r\n  },\r\n  buttonContainer: {\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    marginTop: \"4rem\",\r\n  },\r\n  googleButton: {\r\n    width: \"80%\",\r\n    background: \"red !important\",\r\n    color: \"white\",\r\n    padding: \"1rem\",\r\n    border: \"0px\",\r\n    boxShadow: \"2px 3px 5px black\",\r\n  },\r\n});\r\nexport default useStyles;\r\n","import { useState, useEffect } from \"react\";\r\nimport { useUserContext } from \"../context/UserContext\";\r\nimport { Form, Button, Container, Alert } from \"react-bootstrap\";\r\nimport { GoogleLogin } from \"react-google-login\";\r\nimport { googleClientId } from \"../config\";\r\nimport useStyles from \"../styles/signinStyles\";\r\n\r\nexport default function Signin(props) {\r\n  const userContext = useUserContext();\r\n  const classes = useStyles();\r\n  const [errorMessage, setErrorMessage] = useState(false);\r\n\r\n  useEffect(() => {\r\n    console.log(\"logging user context:\" + JSON.stringify(userContext));\r\n  }, [userContext]);\r\n\r\n  const [formFields, setFormFields] = useState({\r\n    username: \"user\",\r\n    password: \"pass1234\",\r\n    remember: false,\r\n  });\r\n  const handleCheck = (e) => {\r\n    setFormFields((prev) => ({\r\n      ...prev,\r\n      [e.target.name]: !formFields.remember,\r\n    }));\r\n  };\r\n  const handleChange = (e) => {\r\n    console.log(\"change\");\r\n    setFormFields((prev) => ({ ...prev, [e.target.name]: e.target.value }));\r\n  };\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    const user = formFields;\r\n    const result = await userContext.userSignIn(user);\r\n    console.log(result);\r\n    if (result === false) {\r\n      setErrorMessage(true);\r\n    }\r\n  };\r\n\r\n  async function responseGoogle(response) {\r\n    try {\r\n      console.log(response);\r\n      // console.log(response.tokenObj[\"access_token\"]);\r\n      const accessTokenObj = { access_token: response.tokenObj.access_token };\r\n      userContext.userGoogleSignIn(accessTokenObj);\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Container>\r\n      {console.log(\"rendering sign in\")}\r\n      <h2 className=\"mt-3\">sign in</h2>\r\n      <Form className={classes.form} onSubmit={handleSubmit}>\r\n        <Form.Group controlId=\"formBasicEmail\">\r\n          <Form.Label>username</Form.Label>\r\n          <Form.Control\r\n            value={formFields.username}\r\n            onChange={handleChange}\r\n            name=\"username\"\r\n            type=\"text\"\r\n            placeholder=\"Enter email\"\r\n          />\r\n        </Form.Group>\r\n\r\n        <Form.Group controlId=\"formBasicPassword\">\r\n          <Form.Label>Password</Form.Label>\r\n          <Form.Control\r\n            value={formFields.password}\r\n            onChange={handleChange}\r\n            name=\"password\"\r\n            type=\"password\"\r\n            placeholder=\"Password\"\r\n          />\r\n        </Form.Group>\r\n        <Form.Group controlId=\"formBasicCheckbox\">\r\n          <Form.Check\r\n            name=\"remember\"\r\n            onChange={handleCheck}\r\n            type=\"checkbox\"\r\n            label=\"remember me on this pc\"\r\n          />\r\n        </Form.Group>\r\n\r\n        <Button className={classes.button} variant=\"primary\" type=\"submit\">\r\n          Submit\r\n        </Button>\r\n        {errorMessage && (\r\n          <Alert variant={\"danger\"}>\r\n            Unable to login. Username or password are incorrect\r\n          </Alert>\r\n        )}\r\n      </Form>\r\n      <div className={classes.dividerContainer}>\r\n        <hr></hr>\r\n\r\n        <h1 className={classes.dividerText}>Or</h1>\r\n      </div>\r\n\r\n      <div className={classes.buttonContainer}>\r\n        <GoogleLogin\r\n          clientId={googleClientId}\r\n          className={classes.googleButton}\r\n          buttonText=\"Login\"\r\n          onSuccess={responseGoogle}\r\n          onFailure={responseGoogle}\r\n          cookiePolicy={\"single_host_origin\"}\r\n        />\r\n      </div>\r\n    </Container>\r\n  );\r\n}\r\n","import { makeStyles } from \"@material-ui/styles\";\r\nconst useStyles = makeStyles({\r\n  title: {\r\n    padding: \"2rem\",\r\n    textAlign: \"center\",\r\n  },\r\n  row: {\r\n    marginBottom: \"1rem\",\r\n  },\r\n  label: {\r\n    verticalAlign: \"middle\",\r\n    marginBottom: \"0\",\r\n    fontWeight: \"bold\",\r\n  },\r\n  spinnerContainer: {\r\n    display: \"flex\",\r\n    paddingTop: \"20vh\",\r\n    justifyContent: \"center\",\r\n  },\r\n  spinner: {\r\n    width: \"5rem\",\r\n    height: \"5rem\",\r\n  },\r\n  button: { display: \"block\", marginLeft: \"auto\" },\r\n});\r\nexport default useStyles;\r\n","import { useUserContext } from \"../context/UserContext\";\r\nimport { Container, Form, Row, Col, Button } from \"react-bootstrap\";\r\nimport { useLayoutEffect, useState } from \"react\";\r\nimport { Spinner } from \"react-bootstrap\";\r\nimport useStyles from \"../styles/profileStyles\";\r\n\r\nexport default function Profile(props) {\r\n  const userContext = useUserContext();\r\n  const { user, userGetDetails, userUpdateDetails } = userContext;\r\n\r\n  const [details, setDetails] = useState({\r\n    name: \"\",\r\n    email: \"\",\r\n    hobbies: \"\",\r\n  });\r\n  const [loading, setLoading] = useState(false);\r\n  const classes = useStyles();\r\n\r\n  useLayoutEffect(() => {\r\n    async function userGetDetailsWrapper() {\r\n      setLoading(true);\r\n      const data = await userGetDetails(user);\r\n      const { name, email, hobbies } = data;\r\n      if (mounted) {\r\n        setDetails({ name, email, hobbies });\r\n        setLoading(false);\r\n      }\r\n    }\r\n    let mounted = true;\r\n    console.log(\"mounted profile\");\r\n    userGetDetailsWrapper();\r\n    return () => {\r\n      mounted = false;\r\n    };\r\n  }, []);\r\n\r\n  function onChange(event) {\r\n    setDetails((prev) => ({\r\n      ...prev,\r\n      [event.target.name]: event.target.value,\r\n    }));\r\n  }\r\n  async function handleClick() {\r\n    const { name, hobbies, email } = details;\r\n    setLoading(true);\r\n    const res = await userUpdateDetails(user, name, email, hobbies);\r\n    setLoading(false);\r\n    console.log(res);\r\n  }\r\n\r\n  return (\r\n    <Container>\r\n      {console.log(\"render profile\")}\r\n      {loading ? (\r\n        <div className={classes.spinnerContainer}>\r\n          {\" \"}\r\n          <Spinner animation=\"border\" className={classes.spinner} role=\"status\">\r\n            <span className=\"sr-only\">Loading...</span>\r\n          </Spinner>\r\n        </div>\r\n      ) : (\r\n        <div>\r\n          <h1 className={classes.title}>{user}'s Profile Page</h1>\r\n          <Row className={classes.row}>\r\n            <Col xs={2}>\r\n              <Form.Label className={classes.label}>Email address</Form.Label>\r\n            </Col>\r\n            <Col xs={6}>\r\n              <Form.Control\r\n                onChange={onChange}\r\n                name=\"email\"\r\n                value={details.email}\r\n                // value={emailData}\r\n                type=\"email\"\r\n              />\r\n            </Col>\r\n          </Row>\r\n          <Row className={classes.row}>\r\n            <Col xs={2}>\r\n              <Form.Label className={classes.label}>Name</Form.Label>\r\n            </Col>\r\n            <Col xs={6}>\r\n              <Form.Control\r\n                onChange={onChange}\r\n                name=\"name\"\r\n                value={details.name}\r\n                // value={nameData}\r\n                type=\"text\"\r\n              />\r\n            </Col>\r\n          </Row>\r\n          <Row className={classes.row}>\r\n            <Col xs={2}>\r\n              <Form.Label className={classes.label}>\r\n                Interests and hobbies\r\n              </Form.Label>\r\n            </Col>\r\n            <Col xs={6}>\r\n              <Form.Control\r\n                onChange={onChange}\r\n                name=\"hobbies\"\r\n                value={details.hobbies}\r\n                // value={hobbiesData}\r\n                as=\"textarea\"\r\n                rows={3}\r\n              />\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col xs={8}>\r\n              {\" \"}\r\n              <Button\r\n                onClick={handleClick}\r\n                className={classes.button}\r\n                variant=\"dark\"\r\n              >\r\n                save\r\n              </Button>\r\n            </Col>\r\n          </Row>\r\n        </div>\r\n      )}\r\n    </Container>\r\n  );\r\n}\r\n","import { makeStyles } from \"@material-ui/styles\";\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    background: \"purple\",\r\n\r\n    padding: \"10px\",\r\n  },\r\n  item: {\r\n    fontSize: \"2rem\",\r\n    marginRight: \"1rem\",\r\n    color: \"white\",\r\n    textDecoration: \"none\",\r\n    // \"&:first-child\": {\r\n    //   marginLeft: \"1rem\",\r\n    // },\r\n\r\n    \"&:hover\": {\r\n      color: \"black\",\r\n    },\r\n  },\r\n  signoutButton: {\r\n    borderStyle: \"none\",\r\n    backgroundColor: \"inherit\",\r\n  },\r\n});\r\nexport default useStyles;\r\n","import { Link } from \"react-router-dom\";\r\n\r\nimport { useEffect } from \"react\";\r\nimport { useUserContext } from \"../context/UserContext\";\r\nimport { Navbar, Nav } from \"react-bootstrap\";\r\nimport useStyles from \"../styles/navCompStyles\";\r\n\r\nexport default function NavComp(props) {\r\n  const classes = useStyles();\r\n  const userContext = useUserContext();\r\n  const { rootRoute } = props;\r\n  useEffect(() => {\r\n    console.log(\"useeffect Navbar\");\r\n  }, [userContext.user]);\r\n\r\n  return (\r\n    <Navbar bg=\"light\" expand=\"sm\">\r\n      {console.log(\"rendering nav\")}\r\n\r\n      <Navbar.Brand>\r\n        <b>My Online Journal</b>\r\n      </Navbar.Brand>\r\n      <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n      <Navbar.Collapse id=\"basic-navbar-nav\">\r\n        <Nav className=\"mr-auto\">\r\n          <Link className=\"nav-link\" to={`${rootRoute}/`}>\r\n            Home\r\n          </Link>\r\n\r\n          {userContext.user ? (\r\n            <>\r\n              <Link className=\"nav-link\" to={`${rootRoute}/calendar`}>\r\n                Calendar\r\n              </Link>\r\n              <Link className=\"nav-link\" to={`${rootRoute}/journal`}>\r\n                Journal\r\n              </Link>\r\n              <Link className=\"nav-link\" to={`${rootRoute}/allentries`}>\r\n                All Entries\r\n              </Link>\r\n              <Link className=\"nav-link\" to={`${rootRoute}/profile`}>\r\n                Profile\r\n              </Link>\r\n              {/* <Link className=\"nav-link\" to=\"/signout\">\r\n                Signout\r\n              </Link> */}\r\n              <button\r\n                className={`${classes.signoutButton} nav-link`}\r\n                onClick={() => userContext.userSignOut()}\r\n              >\r\n                Signout\r\n              </button>\r\n            </>\r\n          ) : (\r\n            <>\r\n              <Link className=\"nav-link\" to={`${rootRoute}/signin`}>\r\n                Signin\r\n              </Link>\r\n              <Link className=\"nav-link\" to={`${rootRoute}/signup`}>\r\n                Signup\r\n              </Link>\r\n            </>\r\n          )}\r\n        </Nav>\r\n      </Navbar.Collapse>\r\n    </Navbar>\r\n  );\r\n}\r\n","import { makeStyles } from \"@material-ui/styles\";\r\nconst useStyles = makeStyles({\r\n  title: {\r\n    marginTop: \"2rem\",\r\n    marginBottom: \"4rem\",\r\n  },\r\n  imageContainer: {\r\n    width: \"50%\",\r\n  },\r\n  image: {\r\n    marginLeft: \"50%\",\r\n    marginTop: \"-10%\",\r\n    width: \"100%\",\r\n  },\r\n  signoutButton: {\r\n    borderStyle: \"none\",\r\n    display: \"inline\",\r\n    backgroundColor: \"inherit\",\r\n    padding: \"0\",\r\n    color: \"dodgerblue\",\r\n  },\r\n});\r\nexport default useStyles;\r\n","import { Container, ListGroup, Col, Row } from \"react-bootstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport journalImg from \"../img/stockJournal.png\";\r\nimport useStyles from \"../styles/journalStyles\";\r\n\r\nexport default function Journal(props) {\r\n  const classes = useStyles();\r\n\r\n  const { rootRoute } = props;\r\n\r\n  // if (userContext.userState) {\r\n  //   console.log(userContext.userState);\r\n  // }\r\n\r\n  return (\r\n    <Container className={classes.root}>\r\n      <Row>\r\n        <Col xs={6}>\r\n          <h1 className={classes.title}>\r\n            Add, browse or edit your Journal entries from this page!\r\n          </h1>\r\n        </Col>\r\n      </Row>\r\n      <Row>\r\n        <Col xs={6}>\r\n          <ListGroup>\r\n            <ListGroup.Item>\r\n              <Link to={`${rootRoute}/allentries`}>Browse All Entries</Link>\r\n            </ListGroup.Item>\r\n\r\n            <ListGroup.Item>\r\n              <Link to={`${rootRoute}/Calendar`}>Browse Entries By Date</Link>\r\n            </ListGroup.Item>\r\n            <ListGroup.Item>\r\n              <Link to={`${rootRoute}/Entries/create-entry`}>\r\n                create a new Entry\r\n              </Link>\r\n            </ListGroup.Item>\r\n          </ListGroup>\r\n        </Col>\r\n        <Col xs={6}>\r\n          <div className={classes.imageContainer}>\r\n            <img className={classes.image} src={journalImg} alt=\"\" />\r\n          </div>\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n}\r\n","import { serverUrl } from \"../config\";\r\n\r\nasync function saveEntry(data, date, title, username) {\r\n  const entryData = { data, date, title, username };\r\n  console.log(\"saving: \", data);\r\n  console.log(data);\r\n  const response = await fetch(`${serverUrl}entries`, {\r\n    method: \"POST\", // *GET, POST, PUT, DELETE, etc.\r\n    withCredentials: true,\r\n    credentials: \"include\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n      // 'Content-Type': 'application/x-www-form-urlencoded',\r\n    },\r\n\r\n    body: JSON.stringify(entryData), // body data type must match \"Content-Type\" header\r\n  });\r\n  return response;\r\n}\r\nasync function updateEntry(id, title, data) {\r\n  const entryData = { title, data };\r\n\r\n  const response = await fetch(`${serverUrl}entries/${id}`, {\r\n    method: \"PUT\", // *GET, POST, PUT, DELETE, etc.\r\n    withCredentials: true,\r\n    credentials: \"include\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n      // 'Content-Type': 'application/x-www-form-urlencoded',\r\n    },\r\n\r\n    body: JSON.stringify(entryData), // body data type must match \"Content-Type\" header\r\n  });\r\n  return response;\r\n}\r\nasync function getNumberOfEntries(username) {\r\n  console.log(\"getting number of entries for \" + username);\r\n  const response = await fetch(\r\n    `${serverUrl}entries/count?username=${username}`,\r\n    {\r\n      method: \"GET\", // *GET, POST, PUT, DELETE, etc.\r\n      withCredentials: true,\r\n      credentials: \"include\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        // 'Content-Type': 'application/x-www-form-urlencoded',\r\n      },\r\n\r\n      // body data type must match \"Content-Type\" header\r\n    }\r\n  );\r\n  const entries = await response.json();\r\n  return entries;\r\n}\r\n\r\nasync function getEntries(username, date, amount, order) {\r\n  console.log(\"getting entries for \" + username + \" on \" + date);\r\n  const encodedDate = encodeURIComponent(date);\r\n  console.log(encodedDate);\r\n\r\n  const response = await fetch(\r\n    `${serverUrl}entries?date=${encodedDate}&username=${username}&amount=${amount}&order=${order}`,\r\n    {\r\n      method: \"GET\", // *GET, POST, PUT, DELETE, etc.\r\n      withCredentials: true,\r\n      credentials: \"include\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        // 'Content-Type': 'application/x-www-form-urlencoded',\r\n      },\r\n\r\n      // body data type must match \"Content-Type\" header\r\n    }\r\n  );\r\n  const entries = await response.json();\r\n  return entries;\r\n}\r\nasync function getEntry(entryId) {\r\n  console.log(\"id \" + entryId);\r\n  const response = await fetch(`${serverUrl}entries/${entryId}`, {\r\n    method: \"get\", // *GET, POST, PUT, DELETE, etc.\r\n    withCredentials: true,\r\n    credentials: \"include\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n      // 'Content-Type': 'application/x-www-form-urlencoded',\r\n    },\r\n  });\r\n  const entries = await response.json();\r\n  return entries;\r\n}\r\nasync function deleteEntry(entryId) {\r\n  const res = await fetch(`${serverUrl}entries/${entryId}`, {\r\n    method: \"DELETE\",\r\n    withCredentials: true,\r\n    credentials: \"include\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n      // 'Content-Type': 'application/x-www-form-urlencoded',\r\n    },\r\n  });\r\n\r\n  return res;\r\n}\r\n\r\nexport {\r\n  saveEntry,\r\n  getEntries,\r\n  updateEntry,\r\n  getEntry,\r\n  deleteEntry,\r\n  getNumberOfEntries,\r\n};\r\n","import { makeStyles } from \"@material-ui/styles\";\r\n\r\nconst useStyles = makeStyles({\r\n  headerContainer: {\r\n    display: \"flex\",\r\n    justifyContent: \"space-between\",\r\n    alignItems: \"center\",\r\n    marginTop: \"2rem\",\r\n  },\r\n  linkContainer: { textAlign: \"end\" },\r\n  card: { marginTop: \"2rem\" },\r\n  cardText: {\r\n    whiteSpace: \"nowrap\",\r\n    overflow: \"hidden\",\r\n    textOverflow: \"ellipsis\",\r\n  },\r\n  spinnerContainer: {\r\n    display: \"flex\",\r\n    paddingTop: \"20vh\",\r\n    justifyContent: \"center\",\r\n  },\r\n  spinner: {\r\n    width: \"5rem\",\r\n    height: \"5rem\",\r\n  },\r\n\r\n  noEntriesMessageContainer: {\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    paddingTop: \"4rem\",\r\n    border: \"2px solid black\",\r\n    marginTop: \"6rem\",\r\n    paddingBottom: \"4rem\",\r\n    alignItems: \"center\",\r\n    background: \"lightsteelblue\",\r\n    borderRadius: \"5px\",\r\n  },\r\n});\r\n\r\nexport default useStyles;\r\n","function strip(html) {\r\n  let doc = new DOMParser().parseFromString(html, \"text/html\");\r\n  return doc.body.textContent || \"\";\r\n}\r\nfunction divideEntriesByDate(res) {\r\n  var dates = [];\r\n  res.forEach((entry) => dates.push(entry.date));\r\n  var dateSet = new Set(dates);\r\n  // var entriesByDate = [{ date: \"\", entries: [{}] }];\r\n  var entriesByDate = [];\r\n  for (let date of dateSet) {\r\n    entriesByDate.push({ date, entries: [] });\r\n  }\r\n  entriesByDate.forEach((obj) => {\r\n    res.forEach((entry) => {\r\n      if (obj.date === entry.date) {\r\n        obj.entries.push(entry);\r\n      }\r\n    });\r\n    obj.date = new Date(obj.date);\r\n  });\r\n  return entriesByDate;\r\n}\r\nexport { divideEntriesByDate, strip };\r\n","import React, { useState, useLayoutEffect } from \"react\";\r\nimport dateFormat from \"dateformat\";\r\nimport { Link, useHistory, useLocation } from \"react-router-dom\";\r\n\r\nimport { useUserContext } from \"../context/UserContext\";\r\nimport { getEntries } from \"../api/entriesApi\";\r\nimport { Card, Button, Container, Spinner } from \"react-bootstrap\";\r\nimport useStyles from \"../styles/entriesStyles\";\r\nimport { strip } from \"../utils/utils\";\r\n\r\nexport default function Entries(props) {\r\n  const history = useHistory();\r\n  const location = useLocation();\r\n  const [loading, setLoading] = useState(false);\r\n  var date = location.search.slice(1);\r\n  var displayDate;\r\n  const { rootRoute } = props;\r\n\r\n  try {\r\n    date = decodeURI(date);\r\n    displayDate = dateFormat(date, \"dddd dd mmmm yyyy\");\r\n  } catch (err) {\r\n    console.log(\"date format incorrect\");\r\n  }\r\n\r\n  const userContext = useUserContext();\r\n  const [entries, setEntries] = useState([]);\r\n  const classes = useStyles();\r\n\r\n  useLayoutEffect(() => {\r\n    console.log(\"use effect entries\");\r\n    async function loadEntries() {\r\n      setLoading(true);\r\n      console.log(\"retrieving for date: \", date);\r\n      console.log(\"$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$\");\r\n      const entries = await getEntries(userContext.user, date);\r\n\r\n      if (mounted) {\r\n        setEntries(entries);\r\n        setLoading(false);\r\n      }\r\n    }\r\n    let mounted = true;\r\n\r\n    loadEntries();\r\n    return () => {\r\n      mounted = false;\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <Container>\r\n      {console.log(\"entries root\")}\r\n\r\n      <div className={classes.headerContainer}>\r\n        <h1 className={classes.title}>\r\n          <em>\r\n            <i>{displayDate}</i>\r\n          </em>\r\n        </h1>\r\n        <Link\r\n          to={{\r\n            pathname: `${rootRoute}/entries/create-entry`,\r\n            new: true,\r\n            search: date,\r\n          }}\r\n        >\r\n          <Button variant=\"dark\">create new entry</Button>\r\n        </Link>{\" \"}\r\n      </div>\r\n\r\n      {loading ? (\r\n        <div className={classes.spinnerContainer}>\r\n          {\" \"}\r\n          <Spinner animation=\"border\" className={classes.spinner} role=\"status\">\r\n            <span className=\"sr-only\">Loading...</span>\r\n          </Spinner>\r\n        </div>\r\n      ) : entries.length > 0 ? (\r\n        entries.map((entry, id) => (\r\n          <Card key={id} className={classes.card}>\r\n            <Card.Body>\r\n              <Card.Title>{entry.title} </Card.Title>\r\n              <Card.Text className={classes.cardText}>\r\n                {strip(entry.data)}\r\n              </Card.Text>\r\n              <div className={classes.linkContainer}>\r\n                <Button\r\n                  variant=\"dark\"\r\n                  onClick={() => {\r\n                    history.push({\r\n                      pathname: `${rootRoute}/entries/display-entry`,\r\n                      entry: entry,\r\n                      search: `${entry._id}`,\r\n                      // search: `testentry`,\r\n                    });\r\n                  }}\r\n                >\r\n                  {\" \"}\r\n                  go to entry\r\n                </Button>\r\n              </div>\r\n            </Card.Body>\r\n          </Card>\r\n        ))\r\n      ) : (\r\n        <div className={classes.noEntriesMessageContainer}>\r\n          <h1>No entries made on this date</h1>\r\n        </div>\r\n      )}\r\n    </Container>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport ReactCalendar from \"react-calendar\";\r\nimport { Container } from \"react-bootstrap\";\r\n// import \"./Calendar.css\";\r\nimport \"react-calendar/dist/Calendar.css\";\r\n\r\nimport {\r\n  useRouteMatch,\r\n  useLocation,\r\n  Route,\r\n  Switch,\r\n  useHistory,\r\n} from \"react-router-dom\";\r\nimport Entries from \"./Entries\";\r\nimport { makeStyles } from \"@material-ui/styles\";\r\n\r\nconst useStyles = makeStyles({\r\n  calendar: {\r\n    marginTop: \"2rem\",\r\n    width: \"100%\",\r\n    \"& .react-calendar__tile--active\": {\r\n      background: \"black\",\r\n    },\r\n  },\r\n\r\n  button: { border: \" 5px solid gray\" },\r\n});\r\n\r\nexport default function Calendar(props) {\r\n  const [date, onDateChange] = useState(new Date());\r\n  const { path } = useRouteMatch();\r\n  const history = useHistory();\r\n  // const path = location.pathname;\r\n  const classes = useStyles();\r\n  const { rootRoute } = props;\r\n\r\n  return (\r\n    <Switch>\r\n      {console.log(\"rendering calendar\")}\r\n      <Route path={`${path}/Entries`}>\r\n        <Entries rootRoute={rootRoute} />\r\n      </Route>\r\n      <Route path={`${path}`}>\r\n        <Container>\r\n          <ReactCalendar\r\n            className={classes.calendar}\r\n            onChange={onDateChange}\r\n            value={date}\r\n            onClickDay={(date) => {\r\n              history.push({\r\n                pathname: `${path}/Entries`,\r\n                // search: `?query=${date}`,\r\n                // search: `${dateFormat(date, \"dd-mm-yyyy\")}`,\r\n                search: date.toString(),\r\n              });\r\n            }}\r\n            // history.push(`${path}/Entries`)\r\n          />\r\n        </Container>\r\n\r\n        {/* <Link to={`${url}/Entries`}>go to entries</Link>{\" \"} */}\r\n      </Route>\r\n    </Switch>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { Pagination } from \"react-bootstrap\";\r\n\r\nexport default function PaginationComponent(props) {\r\n  const { pages, active, setActive } = props;\r\n\r\n  function makeItems() {\r\n    let items = [];\r\n    for (let number = 1; number <= pages; number++) {\r\n      items.push(\r\n        <Pagination.Item\r\n          key={number}\r\n          onClick={() => setActive(number)}\r\n          active={number === active}\r\n        >\r\n          {number}\r\n        </Pagination.Item>\r\n      );\r\n    }\r\n    return items;\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Pagination variant=\"dark\" size=\"lg\">\r\n        {makeItems().map((item) => item)}\r\n      </Pagination>\r\n    </div>\r\n  );\r\n}\r\n","import { makeStyles } from \"@material-ui/styles\";\r\nconst useStyles = makeStyles({\r\n  headerContainer: {\r\n    display: \"flex\",\r\n    justifyContent: \"space-between\",\r\n    alignItems: \"center\",\r\n    marginTop: \"2rem\",\r\n  },\r\n  linkContainer: { textAlign: \"end\" },\r\n  card: { marginBottom: \"2rem\" },\r\n  cardText: {\r\n    whiteSpace: \"nowrap\",\r\n    overflow: \"hidden\",\r\n    textOverflow: \"ellipsis\",\r\n  },\r\n  spinnerContainer: {\r\n    display: \"flex\",\r\n    paddingTop: \"20vh\",\r\n    justifyContent: \"center\",\r\n  },\r\n  spinner: {\r\n    width: \"5rem\",\r\n    height: \"5rem\",\r\n  },\r\n\r\n  noEntriesMessageContainer: {\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    paddingTop: \"4rem\",\r\n    border: \"2px solid black\",\r\n    marginTop: \"6rem\",\r\n    paddingBottom: \"4rem\",\r\n    alignItems: \"center\",\r\n    background: \"lightsteelblue\",\r\n    borderRadius: \"5px\",\r\n  },\r\n  dateContainer: {\r\n    backgroundColor: \"black\",\r\n    color: \"white\",\r\n  },\r\n  newEntryButton: {\r\n    display: \"block\",\r\n\r\n    marginBottom: \"2rem\",\r\n  },\r\n  paginationContainer: {\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    paddingTop: \"2rem\",\r\n    paddingBottom: \"2rem\",\r\n\r\n    \"& .page-item .page-link\": {\r\n      color: \"black\",\r\n    },\r\n    \"& .page-item.active .page-link\": {\r\n      backgroundColor: \"black\",\r\n      borderColor: \"black\",\r\n      color: \"white\",\r\n    },\r\n  },\r\n});\r\n\r\nexport default useStyles;\r\n","import React, { useState, useLayoutEffect } from \"react\";\r\nimport { getEntries, getNumberOfEntries } from \"../api/entriesApi\";\r\nimport { useUserContext } from \"../context/UserContext\";\r\nimport { Card, Spinner, Container, Button } from \"react-bootstrap\";\r\nimport { useHistory, useRouteMatch } from \"react-router-dom\";\r\nimport dateFormat from \"dateformat\";\r\nimport PaginationComponent from \"./PaginationComponent\";\r\nimport { divideEntriesByDate, strip } from \"../utils/utils\";\r\nimport useStyles from \"../styles/allEntriesStyles\";\r\n\r\nexport default function AllEntries(props) {\r\n  const [entriesByDate, setEntriesByDate] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const userContext = useUserContext();\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n  const [numberOfEntries, setNumberOfEntries] = useState(0);\r\n  const [activePage, setActivePage] = useState(1);\r\n  const [entriesPerPage, setEntriesPerPage] = useState(5);\r\n  const { rootRoute } = props;\r\n\r\n  useLayoutEffect(() => {\r\n    setLoading(true);\r\n\r\n    async function getNumberOfEntriesWrapper(user) {\r\n      const res = await getNumberOfEntries(user);\r\n      if (mounted) setNumberOfEntries(res);\r\n    }\r\n    async function getEntriesWrapper(user, entriesPerPage, activePage) {\r\n      const res = await getEntries(user, null, entriesPerPage, activePage);\r\n      console.log(res);\r\n      var entriesByDate = divideEntriesByDate(res);\r\n\r\n      if (mounted) {\r\n        setEntriesByDate(entriesByDate);\r\n        setLoading(false);\r\n      }\r\n    }\r\n\r\n    let mounted = true;\r\n    getNumberOfEntriesWrapper(userContext.user);\r\n    getEntriesWrapper(userContext.user, entriesPerPage, activePage);\r\n    return () => {\r\n      mounted = false;\r\n    };\r\n  }, [activePage]);\r\n\r\n  return (\r\n    <Container>\r\n      {loading ? (\r\n        <div className={classes.spinnerContainer}>\r\n          {\" \"}\r\n          <Spinner animation=\"border\" className={classes.spinner} role=\"status\">\r\n            <span className=\"sr-only\">Loading...</span>\r\n          </Spinner>\r\n        </div>\r\n      ) : (\r\n        <div>\r\n          <div className={classes.paginationContainer}>\r\n            <PaginationComponent\r\n              pages={Math.ceil(numberOfEntries / entriesPerPage)}\r\n              active={activePage}\r\n              setActive={setActivePage}\r\n            />\r\n          </div>\r\n          <Button\r\n            className={classes.newEntryButton}\r\n            variant=\"dark\"\r\n            onClick={() => history.push({ pathname: `Entries/create-entry` })}\r\n          >\r\n            add a new journal entry\r\n          </Button>\r\n          {entriesByDate.length > 0 ? (\r\n            entriesByDate.map((obj, idx) => (\r\n              <div key={idx}>\r\n                <div className={classes.dateContainer}>\r\n                  <h2>\r\n                    {dateFormat(new Date(obj.date), \"dddd, mmmm dS, yyyy\")}\r\n                  </h2>\r\n                </div>\r\n\r\n                {obj.entries.map((entry) => (\r\n                  <Card key={entry._id} className={classes.card}>\r\n                    <Card.Body>\r\n                      <Card.Title>{entry.title}</Card.Title>\r\n                      <Card.Text className={classes.cardText}>\r\n                        {strip(entry.data)}\r\n                      </Card.Text>\r\n                      <div className={classes.linkContainer}>\r\n                        <Button\r\n                          variant=\"dark\"\r\n                          onClick={() => {\r\n                            history.push({\r\n                              pathname: `${rootRoute}/entries/display-entry`,\r\n                              entry: entry,\r\n                              search: `${entry._id}`,\r\n                              // search: `testentry`,\r\n                            });\r\n                          }}\r\n                        >\r\n                          {\" \"}\r\n                          go to post\r\n                        </Button>\r\n                      </div>\r\n                    </Card.Body>\r\n                  </Card>\r\n                ))}\r\n              </div>\r\n            ))\r\n          ) : (\r\n            <div>\r\n              <div className={classes.noEntriesMessageContainer}>\r\n                <h1>No journal entries have been made yet</h1>\r\n              </div>\r\n            </div>\r\n          )}\r\n\r\n          <div className={classes.paginationContainer}>\r\n            <PaginationComponent\r\n              pages={Math.ceil(numberOfEntries / entriesPerPage)}\r\n              active={activePage}\r\n              setActive={setActivePage}\r\n            />\r\n          </div>\r\n        </div>\r\n      )}\r\n    </Container>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { CKEditor } from \"@ckeditor/ckeditor5-react\";\r\nimport ClassicEditor from \"@ckeditor/ckeditor5-build-classic\";\r\n\r\nexport default function Editor(props) {\r\n  const [editMode] = useState(true);\r\n  const { data, setData } = props;\r\n\r\n  return (\r\n    <div className=\"root\">\r\n      {console.log(\"rendering editor with data: \" + data)}\r\n      {editMode ? (\r\n        <CKEditor\r\n          editor={ClassicEditor}\r\n          data={data}\r\n          onReady={(editor) => {\r\n            // You can store the \"editor\" and use when it is needed.\r\n            console.log(\"Editor is ready to use!\", editor);\r\n          }}\r\n          onChange={(event, editor) => setData(editor.getData())}\r\n          disabled={false}\r\n        />\r\n      ) : (\r\n        <CKEditor\r\n          config={{ toolbar: [] }}\r\n          editor={ClassicEditor}\r\n          data={data}\r\n          onReady={(editor) => {\r\n            // You can store the \"editor\" and use when it is needed.\r\n            console.log(\"Editor is ready to use!\", editor);\r\n          }}\r\n          disabled={true}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","import { makeStyles } from \"@material-ui/styles\";\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    paddingTop: \"2rem\",\r\n  },\r\n  inputLabel: {\r\n    fontSize: \"2rem\",\r\n    marginTop: \"2rem\",\r\n    display: \"block\",\r\n  },\r\n  inputTitle: {\r\n    width: \"100%\",\r\n    marginBottom: \"2rem\",\r\n  },\r\n  message: {\r\n    textAlign: \"center\",\r\n  },\r\n});\r\nexport default useStyles;\r\n","import React, { useState } from \"react\";\r\nimport Editor from \"./Editor\";\r\nimport { useUserContext } from \"../context/UserContext\";\r\nimport dateFormat from \"dateformat\";\r\nimport { useLocation, useHistory } from \"react-router\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Button, Container } from \"react-bootstrap\";\r\nimport { saveEntry } from \"../api/entriesApi\";\r\nimport useStyles from \"../styles/newEntryStyles\";\r\n\r\nexport default function NewEntry(props) {\r\n  const location = useLocation();\r\n  const history = useHistory();\r\n  const [data, setData] = useState();\r\n  const [title, setTitle] = useState(\"\");\r\n  const [successMessage, setSuccessMessage] = useState(false);\r\n  const userContext = useUserContext();\r\n  const username = userContext.user;\r\n  const classes = useStyles();\r\n  var date = location.search.slice(1);\r\n  const { rootRoute } = props;\r\n\r\n  var displayDate;\r\n  try {\r\n    if (!date) {\r\n      date = new Date();\r\n    }\r\n    date = decodeURI(date);\r\n    displayDate = dateFormat(date, \"dddd dd mmmm yyyy\");\r\n  } catch (err) {\r\n    console.log(location.search.slice(1));\r\n    console.log(err);\r\n  }\r\n\r\n  const handleSubmit = async (data) => {\r\n    const createdAt = new Date();\r\n    const timezoneOffset = createdAt.getTimezoneOffset();\r\n\r\n    const entryData = {\r\n      date,\r\n      username,\r\n      title,\r\n      data,\r\n      createdAt,\r\n      timezoneOffset,\r\n    };\r\n    async function saveEntryWrapper(entryData) {\r\n      const res = await saveEntry(entryData);\r\n      if (res.status === 200) {\r\n        setSuccessMessage(true);\r\n        setTimeout(() => history.goBack(), 1000);\r\n      }\r\n    }\r\n    saveEntryWrapper(entryData);\r\n  };\r\n\r\n  return (\r\n    <Container className={classes.root}>\r\n      {successMessage ? (\r\n        <h1 className={classes.message}>Post successfull</h1>\r\n      ) : (\r\n        <div>\r\n          {console.log(location.search.slice(1))}\r\n          {console.log(date)}\r\n          <h1>\r\n            {displayDate}\r\n            <span style={{ fontSize: \"1.2rem\" }}>\r\n              <Link to={`${rootRoute}/Calendar`}> pick a different date</Link>\r\n            </span>\r\n          </h1>\r\n          <h3>Create a new Entry</h3>\r\n          <label htmlFor=\"titleInput\" className={classes.inputLabel}>\r\n            title\r\n          </label>\r\n          <input\r\n            id=\"titleInput\"\r\n            value={title}\r\n            onChange={(event) => setTitle(event.target.value)}\r\n            className={classes.inputTitle}\r\n          ></input>\r\n          <Editor\r\n            handleSubmit={handleSubmit}\r\n            data={data}\r\n            setData={(data) => setData(data)}\r\n          />\r\n          <Button\r\n            variant=\"dark mt-2\"\r\n            className={classes.buttonSave}\r\n            onClick={() => handleSubmit(data)}\r\n          >\r\n            save new entry\r\n          </Button>\r\n        </div>\r\n      )}\r\n    </Container>\r\n  );\r\n}\r\n","import { makeStyles } from \"@material-ui/styles\";\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    paddingTop: \"2rem\",\r\n  },\r\n  titleInput: {\r\n    marginBottom: \"2rem\",\r\n    width: \"100%\",\r\n  },\r\n  titleLabel: {\r\n    fontSize: \"2rem\",\r\n  },\r\n  buttonSave: {\r\n    marginTop: \"2rem\",\r\n    marginRight: \"1rem\",\r\n  },\r\n  message: {\r\n    textAlign: \"center\",\r\n  },\r\n});\r\n\r\nexport default useStyles;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { CKEditor } from \"@ckeditor/ckeditor5-react\";\r\nimport ClassicEditor from \"@ckeditor/ckeditor5-build-classic\";\r\n\r\nimport { useLocation, useHistory } from \"react-router\";\r\nimport { Button, Container } from \"react-bootstrap\";\r\nimport useStyles from \"../styles/displayEntryStyles\";\r\nimport { getEntry, updateEntry, deleteEntry } from \"../api/entriesApi\";\r\nimport { strip } from \"../utils/utils\";\r\n\r\nexport default function DisplayEntry(props) {\r\n  const location = useLocation();\r\n  const history = useHistory();\r\n  const [entry, setEntry] = useState(location.entry);\r\n  const [data, setData] = useState(\"\");\r\n  const [title, setTitle] = useState(\"\");\r\n  const [editMode, setEditMode] = useState(false);\r\n  const [successMessage, setSuccessMessage] = useState(false);\r\n  const [deletMessage, setDeleteMessage] = useState(false);\r\n  const classes = useStyles();\r\n\r\n  useEffect(() => {\r\n    async function getEntryWrapper() {\r\n      if (!entry) {\r\n        console.log(\"No entry\");\r\n        const entryId = location.search.slice(1);\r\n        const res = await getEntry(entryId);\r\n        console.log(\"entry res \" + res);\r\n        setEntry(res);\r\n        setData(res.data);\r\n        setTitle(res.title);\r\n      } else if (!data) {\r\n        console.log(\"No data\");\r\n        setData(entry.data);\r\n        setTitle(entry.title);\r\n      }\r\n    }\r\n\r\n    if (!entry || !data) {\r\n      //upon page refreshing entry won't be passed in location object\r\n      getEntryWrapper();\r\n    }\r\n  }, []);\r\n\r\n  function displaySuccessMessage() {\r\n    setSuccessMessage(true);\r\n    setTimeout(() => setSuccessMessage(false), 1000);\r\n  }\r\n  function displayDeleteMessage() {\r\n    setDeleteMessage(true);\r\n\r\n    setTimeout(() => {\r\n      setDeleteMessage(false);\r\n      history.goBack();\r\n    }, 1000);\r\n  }\r\n\r\n  const handleSubmit = async () => {\r\n    async function updateEntryWrapper(updateData) {\r\n      const { entryId, title, data } = updateData;\r\n      console.log(\"id \" + entryId);\r\n      console.log(\"data \" + data);\r\n      console.log(\"title \" + title);\r\n      const res = await updateEntry(entryId, title, data);\r\n      setEditMode(false);\r\n      console.log(res);\r\n      displaySuccessMessage();\r\n    }\r\n    updateEntryWrapper({ data, title, entryId: entry._id });\r\n  };\r\n\r\n  const handleDelete = async (event) => {\r\n    const entryId = entry._id;\r\n    const res = await deleteEntry(entryId);\r\n    displayDeleteMessage();\r\n  };\r\n\r\n  return (\r\n    <Container className={classes.root}>\r\n      {successMessage ? (\r\n        <h1 className={classes.message}>post has been updated</h1>\r\n      ) : (\r\n        <>\r\n          {deletMessage ? (\r\n            <h1 className={classes.message}>post has been deleted</h1>\r\n          ) : (\r\n            <div>\r\n              {editMode ? (\r\n                <div>\r\n                  <label htmlFor=\"titleInput\" className={classes.titleLabel}>\r\n                    Title\r\n                  </label>\r\n                  <input\r\n                    id=\"titleInput\"\r\n                    type=\"text\"\r\n                    value={title}\r\n                    className={classes.titleInput}\r\n                    onChange={(event) => setTitle(event.target.value)}\r\n                    disabled={!editMode}\r\n                  />\r\n\r\n                  <CKEditor\r\n                    editor={ClassicEditor}\r\n                    data={data}\r\n                    onReady={(editor) => {\r\n                      // You can store the \"editor\" and use when it is needed.\r\n                      console.log(\"Editor is ready to use!\", editor);\r\n                    }}\r\n                    onChange={(event, editor) => setData(editor.getData())}\r\n                    disabled={!editMode}\r\n                  />\r\n                  <Button\r\n                    variant={\"dark mt-2\"}\r\n                    className={classes.buttonSave}\r\n                    onClick={() => handleSubmit()}\r\n                  >\r\n                    save changes{\" \"}\r\n                  </Button>\r\n                </div>\r\n              ) : (\r\n                <>\r\n                  <h1>{strip(title)}</h1>\r\n                  <p>{strip(data)}</p>\r\n                  <Button\r\n                    variant={\"dark\"}\r\n                    className={classes.buttonSave}\r\n                    onClick={() => setEditMode(!editMode)}\r\n                  >\r\n                    edit post{\" \"}\r\n                  </Button>\r\n                  <Button\r\n                    variant={\"dark\"}\r\n                    className={classes.buttonSave}\r\n                    name={\"deleteButton\"}\r\n                    onClick={(event) => handleDelete(event)}\r\n                  >\r\n                    delete post{\" \"}\r\n                  </Button>\r\n                </>\r\n              )}\r\n            </div>\r\n          )}\r\n        </>\r\n      )}\r\n    </Container>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nexport default function FourOFour() {\r\n  return (\r\n    <div style={{ display: \"flex\", justifyContent: \"center\" }}>\r\n      <h1>error 404,Page not found.</h1>\r\n    </div>\r\n  );\r\n}\r\n","import { makeStyles } from \"@material-ui/styles\";\r\n\r\nconst useStyles = makeStyles({\r\n  loadingContainer: {\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n\r\n    \"& h1\": {\r\n      paddingTop: \"2rem\",\r\n    },\r\n  },\r\n});\r\n\r\nexport default useStyles;\r\n","import React from \"react\";\r\nimport { Redirect, Route, Switch } from \"react-router-dom\";\r\n\r\nimport Middleware from \"./components/Middleware\";\r\nimport Signup from \"./components/Signup\";\r\nimport Home from \"./components/Home\";\r\nimport Signin from \"./components/Signin\";\r\nimport Profile from \"./components/Profile\";\r\nimport NavComp from \"./components/NavComp\";\r\nimport Journal from \"./components/Journal\";\r\n\r\nimport Calendar from \"./components/Calendar\";\r\nimport { useUserContext } from \"./context/UserContext\";\r\nimport { makeStyles } from \"@material-ui/styles\";\r\nimport AllEntries from \"./components/AllEntries\";\r\nimport NewEntry from \"./components/NewEntry\";\r\nimport DisplayEntry from \"./components/DisplayEntry\";\r\nimport FourOFour from \"./components/FourOFour\";\r\nimport useStyles from \"./styles/appStyles\";\r\n\r\nexport default function App(props) {\r\n  const userContext = useUserContext();\r\n  const classes = useStyles();\r\n  const rootRoute = \"/OnlineJournal\";\r\n\r\n  return (\r\n    <div>\r\n      {console.log(\"rendering APP\")}\r\n      {console.log(process.env.NODE_ENV)}\r\n      {console.log(\"#####################\")}\r\n      <Middleware />\r\n      <div>\r\n        {userContext.loading ? (\r\n          <div className={classes.loadingContainer}>\r\n            <h1 className={classes.loadingText}>Loading...</h1>\r\n          </div>\r\n        ) : (\r\n          <div>\r\n            <NavComp rootRoute={rootRoute} />\r\n            <Switch>\r\n              <Route exact path={`/`}>\r\n                <Redirect\r\n                  to={{\r\n                    pathname: `${rootRoute}/`,\r\n                  }}\r\n                />\r\n              </Route>\r\n              <Route exact path={`${rootRoute}/`}>\r\n                <Home rootRoute={rootRoute} />\r\n              </Route>\r\n\r\n              <Route path={`${rootRoute}/signin`}>\r\n                {!userContext.user ? (\r\n                  <Signin />\r\n                ) : (\r\n                  <Redirect\r\n                    to={{\r\n                      pathname: `${rootRoute}/`,\r\n                    }}\r\n                  />\r\n                )}\r\n              </Route>\r\n\r\n              <Route path={`${rootRoute}/profile`}>\r\n                {userContext.user ? (\r\n                  <Profile />\r\n                ) : (\r\n                  <Redirect\r\n                    to={{\r\n                      pathname: `${rootRoute}/`,\r\n                    }}\r\n                  />\r\n                )}\r\n              </Route>\r\n              <Route path={`${rootRoute}/signup`}>\r\n                {!userContext.user ? (\r\n                  <Signup />\r\n                ) : (\r\n                  <Redirect\r\n                    to={{\r\n                      pathname: `${rootRoute}/profile`,\r\n                    }}\r\n                  />\r\n                )}\r\n              </Route>\r\n              <Route path={`${rootRoute}/allentries`}>\r\n                {userContext.user ? (\r\n                  <AllEntries rootRoute={rootRoute} />\r\n                ) : (\r\n                  <Redirect\r\n                    to={{\r\n                      pathname: `${rootRoute}/signin`,\r\n                    }}\r\n                  />\r\n                )}\r\n              </Route>\r\n              <Route path={`${rootRoute}/calendar`}>\r\n                <Calendar rootRoute={rootRoute} />\r\n              </Route>\r\n              <Route path={`${rootRoute}/journal`}>\r\n                {userContext.user ? (\r\n                  <Journal />\r\n                ) : (\r\n                  <Redirect\r\n                    to={{\r\n                      pathname: `${rootRoute}/`,\r\n                    }}\r\n                  />\r\n                )}\r\n              </Route>\r\n              <Route path={`${rootRoute}/entries/create-entry`}>\r\n                {userContext.user ? (\r\n                  <NewEntry />\r\n                ) : (\r\n                  <Redirect\r\n                    to={{\r\n                      pathname: `${rootRoute}/`,\r\n                    }}\r\n                  />\r\n                )}\r\n              </Route>\r\n              <Route path={`${rootRoute}/entries/display-entry`}>\r\n                {userContext.user ? (\r\n                  <DisplayEntry />\r\n                ) : (\r\n                  <Redirect\r\n                    to={{\r\n                      pathname: `${rootRoute}/`,\r\n                    }}\r\n                  />\r\n                )}\r\n              </Route>\r\n              <Route>\r\n                <FourOFour />\r\n              </Route>\r\n            </Switch>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import { serverUrl } from \"../config\";\r\n\r\nasync function checkAuth() {\r\n  var formedUrl = `${serverUrl}users/auth`;\r\n  console.log(formedUrl);\r\n  console.log(\"checking auth\");\r\n\r\n  const response = await fetch(formedUrl, {\r\n    method: \"GET\",\r\n    credentials: \"include\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n  });\r\n  return response;\r\n}\r\nasync function refreshAuth() {\r\n  const response = await fetch(`${serverUrl}users/refreshToken`, {\r\n    method: \"GET\",\r\n    credentials: \"include\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n  });\r\n  return response;\r\n}\r\nasync function getHome() {\r\n  const response = await fetch(`${serverUrl}`, {\r\n    method: \"GET\",\r\n    credentials: \"include\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n  });\r\n  const data = await response.text();\r\n  console.log(response);\r\n  console.log(response.headers);\r\n  console.log(data);\r\n\r\n  return response;\r\n}\r\n\r\nasync function checkAndRefreshAuth() {\r\n  console.log(\"in check and refresh auth\");\r\n  let res = await checkAuth();\r\n  if (res.status === 200) {\r\n    console.log(\"access token valid\");\r\n    let username = await res.text();\r\n    console.log(\"username: \" + username);\r\n    return username;\r\n  } else if (res.status === 401) {\r\n    console.log(\"access token expired\");\r\n    const message = await res.text();\r\n    console.log(message);\r\n    res = await refreshAuth();\r\n    if (res.status === 200) {\r\n      console.log(\"new access token issued\");\r\n      let res = await checkAuth();\r\n      if (res.status === 200) {\r\n        console.log(\"access token valid\");\r\n        let username = await res.text();\r\n        console.log(\"username: \" + username);\r\n\r\n        return username;\r\n      } else {\r\n        console.log(\"2nd check auth returned \" + res.status);\r\n        let message = await res.text();\r\n        console.log(message);\r\n        return;\r\n      }\r\n    } else {\r\n      return;\r\n    }\r\n  } else {\r\n    let message = await res.text();\r\n    console.log(message);\r\n    return;\r\n  }\r\n}\r\n\r\nasync function signout() {\r\n  const res = await fetch(`${serverUrl}users/signout`, {\r\n    withCredentials: true,\r\n    credentials: \"include\",\r\n  });\r\n  return res;\r\n}\r\n\r\nasync function signin(data) {\r\n  // Default options are marked with *\r\n  const response = await fetch(`${serverUrl}users/signin`, {\r\n    method: \"POST\", // *GET, POST, PUT, DELETE, etc.\r\n    withCredentials: true,\r\n    credentials: \"include\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n      // 'Content-Type': 'application/x-www-form-urlencoded',\r\n    },\r\n\r\n    body: JSON.stringify(data), // body data type must match \"Content-Type\" header\r\n  });\r\n  return response; // parses JSON response into native JavaScript objects\r\n}\r\nasync function signup(data) {\r\n  // Default options are marked with *\r\n  const response = await fetch(`${serverUrl}users/signup`, {\r\n    method: \"POST\", // *GET, POST, PUT, DELETE, etc.\r\n    withCredentials: true,\r\n    credentials: \"include\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n      // 'Content-Type': 'application/x-www-form-urlencoded',\r\n    },\r\n\r\n    body: JSON.stringify(data), // body data type must match \"Content-Type\" header\r\n  });\r\n  console.log(\"authAPI signup response\");\r\n  console.log(response);\r\n\r\n  return response; // parses JSON response into native JavaScript objects\r\n}\r\nasync function googleSignin(accessTokenObj) {\r\n  const res = await fetch(`${serverUrl}users/google/signin`, {\r\n    method: \"POST\",\r\n    withCredentials: true,\r\n    credentials: \"include\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n      // \"Content-Type\": \"application/x-www-form-urlencoded\",\r\n    },\r\n    body: JSON.stringify(accessTokenObj),\r\n    // body: accessToken,\r\n  });\r\n  return res;\r\n}\r\nasync function updateDetails(data) {\r\n  const { username, name, email, hobbies } = data;\r\n  const res = await fetch(`${serverUrl}users/${username}`, {\r\n    // const res = await fetch(`${serverUrl}users/user`, {\r\n    method: \"PATCH\",\r\n    withCredentials: true,\r\n    credentials: \"include\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n      // \"Content-Type\": \"application/x-www-form-urlencoded\",\r\n    },\r\n    body: JSON.stringify({ name, email, hobbies }),\r\n  });\r\n  return res;\r\n}\r\nasync function getDetails(data) {\r\n  const username = data;\r\n  const res = await fetch(`${serverUrl}users/${username}`, {\r\n    method: \"GET\",\r\n    withCredentials: true,\r\n    credentials: \"include\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n      // \"Content-Type\": \"application/x-www-form-urlencoded\",\r\n    },\r\n  });\r\n  return res;\r\n}\r\n\r\nexport {\r\n  getHome,\r\n  checkAuth,\r\n  refreshAuth,\r\n  signin,\r\n  signout,\r\n  signup,\r\n  checkAndRefreshAuth,\r\n  googleSignin,\r\n  updateDetails,\r\n  getDetails,\r\n};\r\n","import { userContext } from \"./UserContext\";\r\nimport useUserProvider from \"../state/useUserProvider\";\r\n\r\nexport default function UserProvider(props) {\r\n  const userMethods = useUserProvider();\r\n\r\n  return (\r\n    <userContext.Provider value={userMethods}>\r\n      {props.children}\r\n    </userContext.Provider>\r\n  );\r\n}\r\n","import {\r\n  signin,\r\n  checkAndRefreshAuth,\r\n  signout,\r\n  signup,\r\n  googleSignin,\r\n  updateDetails,\r\n  getDetails,\r\n} from \"../api/authApi\";\r\nimport { useState } from \"react\";\r\n\r\nexport default function useUserProvider() {\r\n  const [user, setUser] = useState(\"\");\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  async function userSignIn(user) {\r\n    console.log(\"in userSignIn\");\r\n    const res = await signin(user);\r\n    if (res.status === 200) {\r\n      console.log(\"user signin successfull\");\r\n      console.log(\"setting user to: \" + user.username);\r\n      setUser(user.username);\r\n      return true;\r\n    }\r\n    if (res.status === 403) {\r\n      console.log(res.status);\r\n      return false;\r\n    }\r\n\r\n    console.log(res);\r\n  }\r\n  async function userUpdateDetails(username, name, email, hobbies) {\r\n    const data = { username, name, email, hobbies };\r\n    const res = await updateDetails(data);\r\n    if (res.status === 200) {\r\n      const data = await res.json();\r\n      return data;\r\n    } else return false;\r\n  }\r\n  async function userGetDetails(username) {\r\n    const res = await getDetails(username);\r\n    if (res.status === 200) {\r\n      const data = await res.json();\r\n      return data;\r\n    } else {\r\n      console.log(\"error retrieving user data. err code\", res.status);\r\n      return false;\r\n    }\r\n  }\r\n\r\n  async function userSignUp(username, password) {\r\n    const res = await signup({ username, password });\r\n    console.log(\"useUserProvider signup res:\");\r\n    console.log(res);\r\n\r\n    if (res.status === 200) {\r\n      console.log(\"user signin successfull\");\r\n\r\n      setUser(username);\r\n      return username;\r\n    } else {\r\n      const { message } = await res.json();\r\n      return message;\r\n    }\r\n  }\r\n\r\n  async function userGoogleSignIn(accessTokenObj) {\r\n    console.log(\"in google sign in\");\r\n    const res = await googleSignin(accessTokenObj);\r\n    console.log(\"useUserProvider googleSignIn res:\");\r\n    console.log(res);\r\n    if (res.status === 200) {\r\n      console.log(\"user signin successfull\");\r\n      const username = await res.json();\r\n\r\n      setUser(username);\r\n      return true;\r\n    }\r\n    if (res.status > 400) {\r\n      console.log(res.status);\r\n      console.log(\"unauthorized\");\r\n      return false;\r\n    }\r\n  }\r\n  async function userSignOut() {\r\n    const res = await signout();\r\n    if (res.status === 200) {\r\n      setUser(\"\");\r\n      console.log(\"user removed from context\");\r\n\r\n      return res;\r\n    }\r\n  }\r\n\r\n  async function userCheckAndRefreshAuth() {\r\n    const username = await checkAndRefreshAuth();\r\n    console.log(\"check and refresh returned: \" + username);\r\n    // if (username) {\r\n    //   setUser(username);\r\n    //   console.log(\"setting user in context\" + username);\r\n    // } else {\r\n    //   setUser(\"\");\r\n    //   console.log(\"removing user from context\");\r\n    // }\r\n    // return;\r\n    if (!username) {\r\n      setUser(\"\");\r\n      console.log(\"removing user from context\");\r\n    } else if (username !== user) {\r\n      setUser(username);\r\n      console.log(\"putting user in context\");\r\n    }\r\n    return;\r\n  }\r\n\r\n  return {\r\n    user,\r\n    userCheckAndRefreshAuth,\r\n    userGoogleSignIn,\r\n    userSignIn,\r\n    userSignOut,\r\n    userSignUp,\r\n    loading,\r\n    setLoading,\r\n    userGetDetails,\r\n    userUpdateDetails,\r\n  };\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { BrowserRouter } from \"react-router-dom\";\r\n\r\nimport App from \"./App\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\nimport UserProvider from \"./context/UserProvider\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <BrowserRouter>\r\n      <UserProvider>\r\n        <App />\r\n      </UserProvider>\r\n    </BrowserRouter>\r\n    ,\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\nreportWebVitals();\r\n"],"sourceRoot":""}